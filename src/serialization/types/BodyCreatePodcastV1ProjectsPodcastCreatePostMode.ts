/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { PodcastConversationMode } from "./PodcastConversationMode";
import { PodcastBulletinMode } from "./PodcastBulletinMode";

export const BodyCreatePodcastV1ProjectsPodcastCreatePostMode: core.serialization.Schema<
    serializers.BodyCreatePodcastV1ProjectsPodcastCreatePostMode.Raw,
    ElevenLabs.BodyCreatePodcastV1ProjectsPodcastCreatePostMode
> = core.serialization
    .union("type", {
        conversation: PodcastConversationMode,
        bulletin: PodcastBulletinMode,
    })
    .transform<ElevenLabs.BodyCreatePodcastV1ProjectsPodcastCreatePostMode>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace BodyCreatePodcastV1ProjectsPodcastCreatePostMode {
    export type Raw =
        | BodyCreatePodcastV1ProjectsPodcastCreatePostMode.Conversation
        | BodyCreatePodcastV1ProjectsPodcastCreatePostMode.Bulletin;

    export interface Conversation extends PodcastConversationMode.Raw {
        type: "conversation";
    }

    export interface Bulletin extends PodcastBulletinMode.Raw {
        type: "bulletin";
    }
}
