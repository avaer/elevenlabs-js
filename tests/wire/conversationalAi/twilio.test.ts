/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { ElevenLabsClient } from "../../../src/Client";

describe("Twilio", () => {
    test("outbound_call", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({
            apiKey: "test",
            environment: { base: server.baseUrl, wss: server.baseUrl },
        });
        const rawRequestBody = {
            agent_id: "agent_id",
            agent_phone_number_id: "agent_phone_number_id",
            to_number: "to_number",
        };
        const rawResponseBody = {
            success: true,
            message: "message",
            conversation_id: "conversation_id",
            callSid: "callSid",
        };
        server
            .mockEndpoint()
            .post("/v1/convai/twilio/outbound-call")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.conversationalAi.twilio.outboundCall({
            agentId: "agent_id",
            agentPhoneNumberId: "agent_phone_number_id",
            toNumber: "to_number",
        });
        expect(response).toEqual({
            success: true,
            message: "message",
            conversationId: "conversation_id",
            callSid: "callSid",
        });
    });
});
