/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../../mock-server/MockServerPool.js";
import { ElevenLabsClient } from "../../../../src/Client";

describe("Widget", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new ElevenLabsClient({
            apiKey: "test",
            environment: { base: server.baseUrl, wss: server.baseUrl },
        });

        const rawResponseBody = {
            agent_id: "agent_id",
            widget_config: {
                variant: "full",
                placement: "top-left",
                expandable: "never",
                avatar: { color_1: "#2792dc", color_2: "#9ce6e6", type: "orb" },
                feedback_mode: "none",
                bg_color: "#ffffff",
                text_color: "#000000",
                btn_color: "#000000",
                btn_text_color: "#ffffff",
                border_color: "#e1e1e1",
                focus_color: "#000000",
                border_radius: 10,
                btn_radius: 10,
                action_text: "Call",
                start_call_text: "Start Call",
                end_call_text: "End Call",
                expand_text: "Expand",
                listening_text: "Listening...",
                speaking_text: "Speaking...",
                shareable_page_text: "Share",
                shareable_page_show_terms: true,
                terms_text: "Terms and Conditions",
                terms_html: "<p>Terms and Conditions</p>",
                terms_key: "terms",
                show_avatar_when_collapsed: true,
                disable_banner: false,
                override_link: "override_link",
                mic_muting_enabled: false,
                transcript_enabled: true,
                text_input_enabled: true,
                text_contents: {
                    main_label: "main_label",
                    start_call: "start_call",
                    new_call: "new_call",
                    end_call: "end_call",
                    mute_microphone: "mute_microphone",
                    change_language: "change_language",
                    collapse: "collapse",
                    expand: "expand",
                    copied: "copied",
                    accept_terms: "accept_terms",
                    dismiss_terms: "dismiss_terms",
                    listening_status: "listening_status",
                    speaking_status: "speaking_status",
                    connecting_status: "connecting_status",
                    input_label: "input_label",
                    input_placeholder: "input_placeholder",
                    user_ended_conversation: "user_ended_conversation",
                    agent_ended_conversation: "agent_ended_conversation",
                    conversation_id: "conversation_id",
                    error_occurred: "error_occurred",
                    copy_id: "copy_id",
                },
                styles: {
                    base: "base",
                    base_hover: "base_hover",
                    base_active: "base_active",
                    base_border: "base_border",
                    base_subtle: "base_subtle",
                    base_primary: "base_primary",
                    base_error: "base_error",
                    accent: "accent",
                    accent_hover: "accent_hover",
                    accent_active: "accent_active",
                    accent_border: "accent_border",
                    accent_subtle: "accent_subtle",
                    accent_primary: "accent_primary",
                    overlay_padding: 1.1,
                    button_radius: 1.1,
                    input_radius: 1.1,
                    bubble_radius: 1.1,
                    sheet_radius: 1.1,
                    compact_sheet_radius: 1.1,
                    dropdown_sheet_radius: 1.1,
                },
                language: "language",
                supported_language_overrides: ["supported_language_overrides"],
                language_presets: { key: {} },
                text_only: true,
                supports_text_only: true,
                first_message: "first_message",
            },
        };
        server
            .mockEndpoint()
            .get("/v1/convai/agents/21m00Tcm4TlvDq8ikWAM/widget")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.conversationalAi.agents.widget.get("21m00Tcm4TlvDq8ikWAM");
        expect(response).toEqual({
            agentId: "agent_id",
            widgetConfig: {
                variant: "full",
                placement: "top-left",
                expandable: "never",
                avatar: {
                    type: "orb",
                    color1: "#2792dc",
                    color2: "#9ce6e6",
                },
                feedbackMode: "none",
                bgColor: "#ffffff",
                textColor: "#000000",
                btnColor: "#000000",
                btnTextColor: "#ffffff",
                borderColor: "#e1e1e1",
                focusColor: "#000000",
                borderRadius: 10,
                btnRadius: 10,
                actionText: "Call",
                startCallText: "Start Call",
                endCallText: "End Call",
                expandText: "Expand",
                listeningText: "Listening...",
                speakingText: "Speaking...",
                shareablePageText: "Share",
                shareablePageShowTerms: true,
                termsText: "Terms and Conditions",
                termsHtml: "<p>Terms and Conditions</p>",
                termsKey: "terms",
                showAvatarWhenCollapsed: true,
                disableBanner: false,
                overrideLink: "override_link",
                micMutingEnabled: false,
                transcriptEnabled: true,
                textInputEnabled: true,
                textContents: {
                    mainLabel: "main_label",
                    startCall: "start_call",
                    newCall: "new_call",
                    endCall: "end_call",
                    muteMicrophone: "mute_microphone",
                    changeLanguage: "change_language",
                    collapse: "collapse",
                    expand: "expand",
                    copied: "copied",
                    acceptTerms: "accept_terms",
                    dismissTerms: "dismiss_terms",
                    listeningStatus: "listening_status",
                    speakingStatus: "speaking_status",
                    connectingStatus: "connecting_status",
                    inputLabel: "input_label",
                    inputPlaceholder: "input_placeholder",
                    userEndedConversation: "user_ended_conversation",
                    agentEndedConversation: "agent_ended_conversation",
                    conversationId: "conversation_id",
                    errorOccurred: "error_occurred",
                    copyId: "copy_id",
                },
                styles: {
                    base: "base",
                    baseHover: "base_hover",
                    baseActive: "base_active",
                    baseBorder: "base_border",
                    baseSubtle: "base_subtle",
                    basePrimary: "base_primary",
                    baseError: "base_error",
                    accent: "accent",
                    accentHover: "accent_hover",
                    accentActive: "accent_active",
                    accentBorder: "accent_border",
                    accentSubtle: "accent_subtle",
                    accentPrimary: "accent_primary",
                    overlayPadding: 1.1,
                    buttonRadius: 1.1,
                    inputRadius: 1.1,
                    bubbleRadius: 1.1,
                    sheetRadius: 1.1,
                    compactSheetRadius: 1.1,
                    dropdownSheetRadius: 1.1,
                },
                language: "language",
                supportedLanguageOverrides: ["supported_language_overrides"],
                languagePresets: {
                    key: {},
                },
                textOnly: true,
                supportsTextOnly: true,
                firstMessage: "first_message",
            },
        });
    });
});
